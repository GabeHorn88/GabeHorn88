import pygame
import random

# Initialisierung von Pygame
pygame.init()

# Fenstergröße
width = 800
height = 600

# Farben
white = (255, 255, 255)
red = (255, 0, 0)
green = (0, 255, 0)

# Erstellen des Spielfensters
window = pygame.display.set_mode((width, height))
pygame.display.set_caption("Snake Game")

# Clock-Objekt zur Aktualisierung der Spielgeschwindigkeit
clock = pygame.time.Clock()

# Größe der Schlange
snake_block = 10
snake_speed = 15

# Font-Objekt für die Anzeige von Text
font_style = pygame.font.SysFont(None, 30)

# Funktion zur Anzeige von Nachrichten
def message(msg, color):
    mesg = font_style.render(msg, True, color)
    window.blit(mesg, [width / 6, height / 3])

# Funktion zum Zeichnen der Schlange
def our_snake(snake_block, snake_list):
    for x in snake_list:
        pygame.draw.rect(window, green, [x[0], x[1], snake_block, snake_block])

# Hauptfunktionsdefinition
def gameLoop():
    game_over = False
    game_close = False

    # Startposition der Schlange
    x1 = width / 2
    y1 = height / 2

    # Bewegung der Schlange
    x1_change = 0
    y1_change = 0

    # Länge der Schlange
    snake_List = []
    Length_of_snake = 1

    # Position des Essens
    foodx = round(random.randrange(0, width - snake_block) / 10.0) * 10
    foody = round(random.randrange(0, height - snake_block) / 10.0) * 10

    # Hauptspielschleife
    while not game_over:

        while game_close == True:
            window.fill(white)
            message("Du hast verloren! Drücke C zum Fortfahren oder Q zum Beenden", red)
            pygame.display.update()

            for event in pygame.event.get():
                if event.type == pygame.KEYDOWN:
                    if event.key == pygame.K_q:
                        game_over = True
                        game_close = False
                    if event.key == pygame.K_c:
                        gameLoop()

        # Überprüfen von Ereignissen
        for event in pygame.event.get():
            if event.type == pygame.QUIT:
                game_over = True
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_LEFT:
                    x1_change = -snake_block
                    y1_change = 0
                elif event.key == pygame.K_RIGHT:
                    x1_change = snake_block
                    y1_change = 0
                elif event.key == pygame.K_UP:
                    y1_change = -snake_block
                    x1_change = 0
                elif event.key == pygame.K_DOWN:
                    y1_change = snake_block
                    x1_change = 0

        # Begrenzung des Spielfelds
        if x1 >= width or x1 < 0 or y1 >= height or y1 < 0:
            game_close = True

        x1 += x1_change
        y1 += y1_change
        window.fill(white)
        pygame.draw.rect(window, red, [foodx, foody, snake_block, snake_block])
        snake_Head = []
        snake_Head.append(x1)
        snake_Head.append(y1)
        snake_List.append(snake_Head)
        if len(snake_List) > Length_of_snake:
            del snake_List[0]

        # Kollision mit sich selbst
        for x in snake_List[:-1]:
            if x == snake_Head:
                game_close = True

        our_snake(snake_block, snake_List)
        pygame.display.update()

        # Essen aufnehmen
        if x1 == foodx and y1 == foody:
            foodx = round(random.randrange(0, width - snake_block) / 10.0) * 10
            foody = round(random.randrange(0, height - snake_block) / 10.0) * 10
            Length_of_snake += 1

        clock.tick(snake_speed)

    pygame.quit()
    quit()

# Starte das Spiel
gameLoop()
